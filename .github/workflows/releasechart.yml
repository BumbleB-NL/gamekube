# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths: KubeServices/
  pull_request:
    branches: [ "main" ]
    paths: KubeServices/

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create_tgz_release_assets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create TGZ files
        run: |
          for dir in KubeServices/*; do
            echo "Tarring directory: $dir"
            base=$(basename "$dir")
            echo "Base directory: $base"
            tar -czf "KubeServices/$base.tgz" "$dir"
          done

      - name: Debug - List Contents of KubeServices Directory
        run: ls KubeServices/

      - name: Debug - List Contents of KubeServices Directory
        run: ls ./

      - name: Debug - List Contents of KubeServices Directory
        run: ls KubeServices/gamekube-factorio

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload TGZ files to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}

      # Loop through each .tgz file and upload it as a release asset
      - name: Loop through .tgz files
        run: |
          for file in KubeServices/*.tgz; do
            echo "Uploading $file"
            curl -s -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary "@$file" \
              "${{ steps.upload-release-asset.outputs.upload_url }}?name=$(basename "$file")"
          done
